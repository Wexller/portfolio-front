@import "../variables";
@import "susy-context";


/// A media query for selecting only screens with viewport width < 592px.
@mixin screen-small-only {
  @media (max-width: $screen-small-max) {
    @include susy-screen-small {
      @content;
    }
  }
}

/// A media query for selecting screens with viewport width ≥ 592px.
@mixin screen-medium-up {
  @media (min-width: $screen-medium-min) {
    @include susy-screen-medium {
      @content;
    }
  }
}

/// A media query for selecting screens with viewport width < 1112px
@mixin screen-medium-down {
  @media (max-width: $screen-medium-max) {
    @content;
  }
}

/// A media query for selecting screens with viewport width in
/// [592px, 1112px).
@mixin screen-medium-only {
  @media (min-width: $screen-medium-min) and (max-width: $screen-medium-max) {
    @include susy-screen-medium {
      @content;
    }
  }
}

/// A media query for selecting screens with viewport width ≥ 1112px.
@mixin screen-large-up {
  @media (min-width: $screen-large-min) {
    @include susy-screen-large {
      @content;
    }
  }
}

/// A media query for selecting screens with viewport width < 1112px.
@mixin screen-large-down {
  @media (max-width: $screen-medium-max) {
    @content;
  }
}

/// A media query for selecting screens with viewport width from the given
/// value.
/// @param {length} $min - viewport minimum width (included).
@mixin screen-min($min) {
  @media (min-width: $min) {
    @content;
  }
}

/// A media query for selecting screens with viewport width up to the given
/// value.
/// @param {length} $max - viewport maximum width (not included).
@mixin screen-max($max) {
  @media (max-width: $max) {
    @include susy-screen-large {
      @content;
    }
  }
}

/// A media query for selecting screens with viewport width in the given
/// interval.
/// @param {Length} $min - viewport minimum width (included).
/// @param {length} $max - viewport maximum width (not included).
@mixin screen-interval($min, $max) {
  @media (min-width: $min) and (max-width: $max) {
    @content;
  }
}

/// A media query for selecting screens with viewport width in the first half
/// of the given interval.
/// @param {Length} $min - viewport minimum width (included).
/// @param {length} $max - viewport maximum width (not included).
@mixin screen-former-half-interval($min, $max) {
  $max: $min + round(($max - $min) / 2) - 1px;
  @include screen-interval ($min, $max) {
    @content;
  }
}

/// A media query for selecting screens with viewport width in the second half
/// of the given interval.
/// @param {Length} $min - viewport minimum width (included).
/// @param {length} $max - viewport maximum width (not included).
@mixin screen-latter-half-interval($min, $max) {
  $min: $min + round(($max - $min) / 2);
  @include screen-interval ($min, $max) {
    @content;
  }
}